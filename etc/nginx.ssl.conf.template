server {
	#
	# HTTP
	#
	listen 80;
	server_name %%NGINX_SITE_MAIN%% %%NGINX_SITE_OTHER%%;
	root %%NGINX_ROOT_PREFIX%%/%%NGINX_SITE_MAIN%%/webroot;

	# Do not redirect Let's Encrypt validations
	location /.well-known/ {}

	# Redirect HTTP to HTTPS
	location / {
		return 301 https://$host$request_uri;
	}
}

server {
	#
	# HTTPS
	#
	listen 443 ssl;
	ssl on;
	ssl_certificate		%%NGINX_ROOT_PREFIX%%/%%NGINX_SITE_MAIN%%/etc/ssl/%%NGINX_SITE_MAIN%%.fullchain.pem;
	ssl_certificate_key %%NGINX_ROOT_PREFIX%%/%%NGINX_SITE_MAIN%%/etc/ssl/%%NGINX_SITE_MAIN%%.privkey.pem;

	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

	#
	# Basics
	#

	server_name %%NGINX_SITE_MAIN%% %%NGINX_SITE_OTHER%%;
	root %%NGINX_ROOT_PREFIX%%/%%NGINX_SITE_MAIN%%/webroot;

	access_log %%NGINX_LOG_PREFIX%%/%%NGINX_SITE_MAIN%%-access.log;
	error_log %%NGINX_LOG_PREFIX%%/%%NGINX_SITE_MAIN%%-error.log;

	#
	# Errors
	#
	error_page 400 /errors/4xx.html; # Bad Request
	error_page 404 /errors/4xx.html; # Not Found

	error_page 500 /errors/5xx.html; # Internal Server Error
	error_page 502 /errors/5xx.html; # Bad Gateway
	error_page 503 /errors/5xx.html; # Service Unavailable
	error_page 504 /errors/5xx.html; # Gateway Timeout

	#
	# Expires
	#

	# Aggressive Expires header for images and fonts
	location ~* \.(png|jpg|jpeg|gif|ico|ttf|woff|otf|eot)$ {
		expires 365d;
		log_not_found off;
	}

	# Aggressive Expires header for JavaScript, CSS
	location ~* \.(js|css)$ {
		expires 30d;
		log_not_found off;
	}

	#
	# Restrictions
	#

	# We already provide one.  No need to log access since often used for health pings
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	# Redirect to robots.php which supports dynamic robots.txt rules
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
		rewrite ^.*$ /robots.php last;
	}

	# Microsoft Internet Explorer requests this, polluting logs with 404
	# Thanks to: http://blog.tcs.de/let-nginx-handle-browserconfig-xml-404-inline/
	location = /browserconfig.xml {return 200 "<?xml version=\"1.0\" encoding=\"utf-8\"?><browserconfig><msapplication></msapplication></browserconfig>";}

	# Safari requests for Apple Touch icons, polluting logs with 404
	# Thanks to: https://gist.github.com/relax-more/10618675
	location ~ /apple-touch-icon(|-\d+x\d+)(|-precomposed).png {
		return 204;
		log_not_found off;
	}

	# Disable all methods besides HEAD, GET, and POST
	if ($request_method !~ ^(GET|HEAD|POST)$) {
			return 444;
	}

	# Deny all attempts to access hidden files such as .htaccess, .git, etc.
	location ~ /\. {
			deny all;
	}

	# Try to serve file directly, fallback on index.php
	index index.php;
	location / {
		try_files $uri $uri/ /index.php$is_args$args;
	}

	#
	# PHP
	#

	location ~ \.php$ {
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		if (!-f $document_root$fastcgi_script_name) {
			return 404;
		}

		fastcgi_param  SCRIPT_FILENAME	  $document_root$fastcgi_script_name;
		fastcgi_param  QUERY_STRING		  $query_string;
		fastcgi_param  REQUEST_METHOD	  $request_method;
		fastcgi_param  CONTENT_TYPE		  $content_type;
		fastcgi_param  CONTENT_LENGTH	  $content_length;

		fastcgi_param  SCRIPT_NAME		  $fastcgi_script_name;
		fastcgi_param  REQUEST_URI		  $request_uri;
		fastcgi_param  DOCUMENT_URI		  $document_uri;
		fastcgi_param  DOCUMENT_ROOT	  $document_root;
		fastcgi_param  SERVER_PROTOCOL	  $server_protocol;
		fastcgi_param  HTTPS			  $https if_not_empty;

		fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
		fastcgi_param  SERVER_SOFTWARE	  nginx/$nginx_version;

		fastcgi_param  REMOTE_ADDR		  $remote_addr;
		fastcgi_param  REMOTE_PORT		  $remote_port;
		fastcgi_param  SERVER_ADDR		  $server_addr;
		fastcgi_param  SERVER_PORT		  $server_port;
		fastcgi_param  SERVER_NAME		  $server_name;

		# PHP only, required if PHP was built with --enable-force-cgi-redirect
		fastcgi_param  REDIRECT_STATUS	  200;

		#fastcgi_intercept_errors on;
		fastcgi_index index.php;
		fastcgi_pass %%NGINX_FASTCGI_PASS%%;
	}
}
# vi:ft=nginx
